webpackHotUpdate(0,{

/***/ 2:
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShoppingCart = function () {\n\tfunction ShoppingCart() {\n\t\t_classCallCheck(this, ShoppingCart);\n\n\t\t/* When a new instance of ShoppingCart is created, it receives one\n     property, an empty cart object.*/\n\t\tthis.cart = {};\n\t\tthis.quantityTotal;\n\t\tthis.total;\n\t}\n\n\t_createClass(ShoppingCart, [{\n\t\tkey: 'passData',\n\t\tvalue: function passData(theApp) {\n\t\t\ttheApp.buildCartView();\n\t\t\tvar buttons = document.getElementsByTagName('button');\n\n\t\t\t$('.addToCartButton').on('click', function () {\n\t\t\t\tvar sku = this.dataset.sku;\n\n\t\t\t\tvar checkSku = function checkSku(product) {\n\t\t\t\t\treturn product.sku == sku;\n\t\t\t\t};\n\n\t\t\t\tvar product = theApp.products.filter(checkSku);\n\n\t\t\t\tconsole.log(sku);\n\t\t\t\tif (sku != undefined || sku != null) {\n\t\t\t\t\ttheApp.ShoppingCart.addToCart(sku, product[0].name, product[0].image, product[0].regularPrice);\n\t\t\t\t\tdocument.cookie = JSON.stringify(theApp.ShoppingCart.cart);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('.quickView-addToCart').on('click', function () {\n\t\t\t\t// console.log('clicked');\n\t\t\t\t$('.overlay').fadeToggle();\n\t\t\t\t$('.quickView').fadeToggle();\n\t\t\t});\n\n\t\t\t$('.clearCartButton').on('click', function () {\n\t\t\t\tconsole.log('clearing');\n\t\t\t\t// console.log(this);\n\t\t\t\ttheApp.ShoppingCart.clearCart();\n\t\t\t});\n\n\t\t\t$('.checkoutButton').on('click', function () {\n\t\t\t\t$('#cart-box').fadeToggle('fast', function () {\n\t\t\t\t\t$('#cart-form').fadeToggle();\n\t\t\t\t\t$('#form-total').val($('#cart-total').html());\n\t\t\t\t});\n\t\t\t\t$('.cart-buttons').fadeToggle();\n\t\t\t\t$('.cart-form-back-button').fadeToggle();\n\t\t\t});\n\n\t\t\t$('.formBackButton').on('click', function () {\n\t\t\t\t$('.cart-form-back-button').fadeToggle('fast', function () {\n\t\t\t\t\t$('.cart-buttons').fadeToggle();\n\t\t\t\t});\n\t\t\t\t$('#cart-form').fadeToggle('fast', function () {\n\t\t\t\t\t$('#cart-box').fadeToggle();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t$('.quickViewButton').on('click', function () {\n\t\t\t\tconsole.log('quickView clicked');\n\t\t\t\tvar sku = this.dataset.sku;\n\t\t\t\tvar checkSku = function checkSku(product) {\n\t\t\t\t\treturn product.sku == sku;\n\t\t\t\t};\n\n\t\t\t\tvar product = theApp.products.filter(checkSku);\n\n\t\t\t\tvar quickView = $('.quickView');\n\n\t\t\t\tquickView.children('.flex-row').children('.prod-image').css({\n\t\t\t\t\t\"background-image\": 'url(\\'' + product[0].image + '\\')',\n\t\t\t\t\t\"background-size\": \"contain\",\n\t\t\t\t\t\"background-position\": \"cover\",\n\t\t\t\t\t\"background-repeat\": \"no-repeat\",\n\t\t\t\t\t\"height\": \"100px\" });\n\n\t\t\t\t$('.prod-name').html('' + product[0].name);\n\t\t\t\t$('.prod-price').html('' + product[0].regularPrice);\n\t\t\t\t$('.quickView-addToCart').attr('data-sku', '' + product[0].sku);\n\t\t\t\t$('.prod-desc').html('' + product[0].longDescription);\n\t\t\t\t// console.log($('.quickView-addToCart'));\n\n\t\t\t\tquickView.children('.flex-row').children('flex-col').children('.flex-row').children('.prod-price').html('<p>' + product[0].price + '</p>');\n\n\t\t\t\t$('.overlay').fadeToggle();\n\t\t\t\t$('.quickView').fadeToggle();\n\t\t\t});\n\n\t\t\t$('.closeButton').on('click', function () {\n\t\t\t\t$('.overlay').fadeToggle();\n\t\t\t\t$('.quickView').fadeToggle();\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'addToCart',\n\t\tvalue: function addToCart(sku, name, image, price) {\n\t\t\t/* First, in order to use addToCart, we'll have to pass it 4 arguments:\n      the sku number, the name, the image and the price.*/\n\t\t\tif (this.cart[sku] === undefined) {\n\t\t\t\t/* It then checks the cart to see if there's already an item with that sku\n       number. If there's no item with the same sku, it creates it, and starts\n       the quantity at 1; */\n\t\t\t\tvar item = { \"sku\": sku,\n\t\t\t\t\t\"name\": name,\n\t\t\t\t\t\"image\": image,\n\t\t\t\t\t\"price\": price,\n\t\t\t\t\t\"quantity\": 1\n\t\t\t\t};\n\t\t\t\t/* Once the item has been created, it gets added to the ShoppingCart */\n\t\t\t\tthis.cart[sku] = item;\n\t\t\t} else {\n\t\t\t\t/* If the item is already in the cart, it just increases the quantity\n       by 1. */\n\t\t\t\tthis.cart[sku].quantity++;\n\t\t\t};\n\t\t\t// console.log(this.cart);\n\t\t\tthis.updateTotal();\n\t\t}\n\t}, {\n\t\tkey: 'removeItemFromCart',\n\t\tvalue: function removeItemFromCart(sku) {\n\t\t\t/* The method takes one argument, the sku number. It uses this to locate\n      the item in the ShoppingCart, and then delete that property all together\n      from this.cart */\n\t\t\tdelete this.cart[sku];\n\t\t\tthis.updateTotal();\n\t\t}\n\t}, {\n\t\tkey: 'updateQuantity',\n\t\tvalue: function updateQuantity(sku, quantity) {\n\t\t\t/* This function gets passed the sku number, and a quantity. I want this function\n      to do 2 things for me: If I increase or decrease the quantity in the shopping \n      car, it should set the quantity in this.cart to that amount. If I try to set \n      the quantity to 0, I want it to remove that item from the cart completely */\n\t\t\tif (quantity > 0) {\n\t\t\t\t// This block only runs if I'm trying \n\t\t\t\tthis.cart[sku][\"quantity\"] = quantity; // to change the quantity to a number \n\t\t\t\t// greater than 0\n\n\t\t\t} else {\n\t\t\t\t/* If I try to change the quantity to 0, then it automatically calls\n       the removeFromCart method and deletes that item from the cart. */\n\t\t\t\tthis.removeItemFromCart(sku);\n\t\t\t}\n\t\t\tthis.updateTotal();\n\t\t}\n\t}, {\n\t\tkey: 'clearCart',\n\t\tvalue: function clearCart() {\n\t\t\t/* This method is straight forward enough. If we want to empty the cart, all\n      we have to do is reset the cart property of the ShoppingCart with an empty\n      object */\n\t\t\tconsole.log('clearing...');\n\t\t\tthis.cart = {};\n\t\t\tdocument.getElementById(\"cart-box\").innerHTML = '';\n\t\t\tthis.updateTotal();\n\t\t\tdocument.cookie = '';\n\t\t\t// console.log(document.cookie);\n\t\t\t$('.total').empty();\n\t\t\t$('#cart-main').slideToggle();\n\t\t\t$('.overlay').fadeToggle();\n\t\t}\n\t}, {\n\t\tkey: 'updateTotal',\n\t\tvalue: function updateTotal() {\n\t\t\tvar total = 0;\n\t\t\tvar quantity = 0;\n\t\t\tfor (var sku in this.cart) {\n\t\t\t\tvar product = this.cart[sku];\n\t\t\t\tquantity += parseInt(product.quantity);\n\t\t\t\ttotal += product.quantity * product.price;\n\t\t\t}\n\t\t\tthis.total = total.toFixed(2);\n\t\t\tthis.quantityTotal = parseInt(quantity);\n\n\t\t\tif (this.quantityTotal > 0) {\n\n\t\t\t\t$('.cart-total').html('' + parseInt(this.quantityTotal));\n\t\t\t\t$('.cart-total').fadeIn();\n\t\t\t} else {\n\t\t\t\t$('.cart-total').hide();\n\t\t\t}\n\t\t\t// console.log(this.total);\n\t\t}\n\t}]);\n\n\treturn ShoppingCart;\n}();\n\nexports.default = ShoppingCart;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }

})