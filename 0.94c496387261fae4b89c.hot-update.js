webpackHotUpdate(0,{

/***/ 6:
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StripePayment = function () {\n\tfunction StripePayment() {\n\t\t_classCallCheck(this, StripePayment);\n\n\t\tthis.token = {};\n\t\tthis.stripeCreateToken();\n\t}\n\n\t_createClass(StripePayment, [{\n\t\tkey: 'stripeCreateToken',\n\t\tvalue: function stripeCreateToken() {\n\t\t\tvar $form = $('#payment-form');\n\t\t\tvar thisStripePayment = this;\n\t\t\t$form.submit(function (event) {\n\t\t\t\t// event.preventDefault();\n\t\t\t\t// Disable the submit button to prevent repeated clicks:\n\t\t\t\t$form.find('.submit').prop('disabled', true);\n\n\t\t\t\t// Request a token from Stripe:\n\t\t\t\t// let token =  Stripe.card.createToken($form, this.stripeResponseHandler);\n\t\t\t\t// console.log(token);\n\t\t\t\tvar error = false;\n\t\t\t\tvar ccNum = $('.card-number').val();\n\t\t\t\tvar cvcNum = $('.card-cvc').val();\n\t\t\t\tvar expMonth = $('.card-expiry-month').val();\n\t\t\t\tvar expYear = $('.card-expiry-year').val();\n\n\t\t\t\tif (!Stripe.card.validateCardNumber(ccNum)) {\n\t\t\t\t\terror = true;\n\t\t\t\t\tthisStripePayment.reportError('The credit card number is invalid');\n\t\t\t\t}\n\n\t\t\t\tif (!Stripe.card.validateCVC(cvcNum)) {\n\t\t\t\t\terror = true;\n\t\t\t\t\tthisStripePayment.reportError('The CVC number is invalid');\n\t\t\t\t}\n\t\t\t\tif (!Stripe.card.validateExpiry(expMonth, expYear)) {\n\t\t\t\t\terror = true;\n\t\t\t\t\tthisStripePayment.reportError('The expiration date is invalid');\n\t\t\t\t}\n\n\t\t\t\tif (!error) {\n\t\t\t\t\tconsole.log('we good');\n\t\t\t\t\tvar token = Stripe.card.createToken({\n\t\t\t\t\t\tnumber: ccNum,\n\t\t\t\t\t\tcvc: cvcNum,\n\t\t\t\t\t\texp_month: expMonth,\n\t\t\t\t\t\texp_year: expYear\n\t\t\t\t\t}, this.stripeResponseHandler);\n\n\t\t\t\t\tconsole.log(token);\n\t\t\t\t\tthisStripePayment.token = token;\n\t\t\t\t\tconsole.log(thisStripePayment.token);\n\t\t\t\t\tconsole.log('token created');\n\t\t\t\t}\n\n\t\t\t\t// Prevent the form from being submitted:\n\n\t\t\t\tconsole.log('submitting...');\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'stripeResponseHandler',\n\t\tvalue: function stripeResponseHandler(status, response) {\n\t\t\t// Grab the form:\n\t\t\tvar $form = $('#payment-form');\n\n\t\t\tif (response.error) {\n\t\t\t\t// Problem!\n\t\t\t\tthis.reportError(response.error.message);\n\t\t\t\t// Show the errors on the form:\n\t\t\t\t$form.find('.payment-errors').text(response.error.message);\n\t\t\t\t$form.find('.submit').prop('disabled', false); // Re-enable submission\n\t\t\t} else {\n\t\t\t\t// Token was created!\n\n\t\t\t\t// Get the token ID:\n\t\t\t\tconsole.log('new token');\n\t\t\t\tvar token = response.id;\n\t\t\t\tconsole.log(this.token);\n\n\t\t\t\t// Insert the token ID into the form so it gets submitted to the server:\n\t\t\t\t$form.append($('<input type=\"hidden\" name=\"stripeToken\">').val(token));\n\t\t\t\t$form.append($('<input type=\"hidden\" name=\"chargeAmount\">').val($('.total').val()));\n\n\t\t\t\t// Submit the form:\n\t\t\t\t$form.get(0).submit();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reportError',\n\t\tvalue: function reportError(msg) {\n\t\t\t$('.payment-errors').text(msg).addClass('error');\n\t\t\t$('.submit').prop('disabled', false);\n\n\t\t\treturn false;\n\t\t}\n\t}]);\n\n\treturn StripePayment;\n}();\n\nexports.default = StripePayment;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU3RyaXBlUGF5bWVudC5qcz9kM2MzIl0sIm5hbWVzIjpbIlN0cmlwZVBheW1lbnQiLCJ0b2tlbiIsInN0cmlwZUNyZWF0ZVRva2VuIiwiJGZvcm0iLCIkIiwidGhpc1N0cmlwZVBheW1lbnQiLCJzdWJtaXQiLCJldmVudCIsImZpbmQiLCJwcm9wIiwiZXJyb3IiLCJjY051bSIsInZhbCIsImN2Y051bSIsImV4cE1vbnRoIiwiZXhwWWVhciIsIlN0cmlwZSIsImNhcmQiLCJ2YWxpZGF0ZUNhcmROdW1iZXIiLCJyZXBvcnRFcnJvciIsInZhbGlkYXRlQ1ZDIiwidmFsaWRhdGVFeHBpcnkiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlVG9rZW4iLCJudW1iZXIiLCJjdmMiLCJleHBfbW9udGgiLCJleHBfeWVhciIsInN0cmlwZVJlc3BvbnNlSGFuZGxlciIsInN0YXR1cyIsInJlc3BvbnNlIiwibWVzc2FnZSIsInRleHQiLCJpZCIsImFwcGVuZCIsImdldCIsIm1zZyIsImFkZENsYXNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQXFCQSxhO0FBQ3BCLDBCQUFjO0FBQUE7O0FBQ2IsT0FBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQSxPQUFLQyxpQkFBTDtBQUVBOzs7O3NDQUVtQjtBQUNsQixPQUFJQyxRQUFRQyxFQUFFLGVBQUYsQ0FBWjtBQUNBLE9BQUlDLG9CQUFvQixJQUF4QjtBQUNBRixTQUFNRyxNQUFOLENBQWEsVUFBU0MsS0FBVCxFQUFnQjtBQUM1QjtBQUNDO0FBQ0FKLFVBQU1LLElBQU4sQ0FBVyxTQUFYLEVBQXNCQyxJQUF0QixDQUEyQixVQUEzQixFQUF1QyxJQUF2Qzs7QUFFQTtBQUNEO0FBQ0E7QUFDQSxRQUFJQyxRQUFRLEtBQVo7QUFDQSxRQUFJQyxRQUFRUCxFQUFFLGNBQUYsRUFBa0JRLEdBQWxCLEVBQVo7QUFDQSxRQUFJQyxTQUFTVCxFQUFFLFdBQUYsRUFBZVEsR0FBZixFQUFiO0FBQ0EsUUFBSUUsV0FBV1YsRUFBRSxvQkFBRixFQUF3QlEsR0FBeEIsRUFBZjtBQUNBLFFBQUlHLFVBQVVYLEVBQUUsbUJBQUYsRUFBdUJRLEdBQXZCLEVBQWQ7O0FBRUEsUUFBSSxDQUFDSSxPQUFPQyxJQUFQLENBQVlDLGtCQUFaLENBQStCUCxLQUEvQixDQUFMLEVBQTRDO0FBQzNDRCxhQUFRLElBQVI7QUFDQUwsdUJBQWtCYyxXQUFsQixDQUE4QixtQ0FBOUI7QUFDQTs7QUFFRCxRQUFJLENBQUNILE9BQU9DLElBQVAsQ0FBWUcsV0FBWixDQUF3QlAsTUFBeEIsQ0FBTCxFQUFzQztBQUNyQ0gsYUFBUSxJQUFSO0FBQ0FMLHVCQUFrQmMsV0FBbEIsQ0FBOEIsMkJBQTlCO0FBQ0E7QUFDRCxRQUFJLENBQUNILE9BQU9DLElBQVAsQ0FBWUksY0FBWixDQUEyQlAsUUFBM0IsRUFBcUNDLE9BQXJDLENBQUwsRUFBb0Q7QUFDbkRMLGFBQVEsSUFBUjtBQUNBTCx1QkFBa0JjLFdBQWxCLENBQThCLGdDQUE5QjtBQUNBOztBQUVELFFBQUksQ0FBQ1QsS0FBTCxFQUFZO0FBQ1hZLGFBQVFDLEdBQVIsQ0FBWSxTQUFaO0FBQ0EsU0FBSXRCLFFBQVFlLE9BQU9DLElBQVAsQ0FBWU8sV0FBWixDQUF3QjtBQUNuQ0MsY0FBUWQsS0FEMkI7QUFFbkNlLFdBQUtiLE1BRjhCO0FBR25DYyxpQkFBV2IsUUFId0I7QUFJbkNjLGdCQUFVYjtBQUp5QixNQUF4QixFQUtULEtBQUtjLHFCQUxJLENBQVo7O0FBT0FQLGFBQVFDLEdBQVIsQ0FBWXRCLEtBQVo7QUFDQUksdUJBQWtCSixLQUFsQixHQUEwQkEsS0FBMUI7QUFDQXFCLGFBQVFDLEdBQVIsQ0FBWWxCLGtCQUFrQkosS0FBOUI7QUFDQXFCLGFBQVFDLEdBQVIsQ0FBWSxlQUFaO0FBQ0E7O0FBR0E7O0FBRUFELFlBQVFDLEdBQVIsQ0FBWSxlQUFaO0FBQ0EsV0FBTyxLQUFQO0FBQ0QsSUFoREQ7QUFxREQ7Ozt3Q0FFcUJPLE0sRUFBUUMsUSxFQUFVO0FBQ3RDO0FBQ0EsT0FBSTVCLFFBQVFDLEVBQUUsZUFBRixDQUFaOztBQUVBLE9BQUkyQixTQUFTckIsS0FBYixFQUFvQjtBQUFFO0FBQ3JCLFNBQUtTLFdBQUwsQ0FBaUJZLFNBQVNyQixLQUFULENBQWVzQixPQUFoQztBQUNDO0FBQ0E3QixVQUFNSyxJQUFOLENBQVcsaUJBQVgsRUFBOEJ5QixJQUE5QixDQUFtQ0YsU0FBU3JCLEtBQVQsQ0FBZXNCLE9BQWxEO0FBQ0E3QixVQUFNSyxJQUFOLENBQVcsU0FBWCxFQUFzQkMsSUFBdEIsQ0FBMkIsVUFBM0IsRUFBdUMsS0FBdkMsRUFKa0IsQ0FJNkI7QUFFaEQsSUFORCxNQU1PO0FBQUU7O0FBRVA7QUFDQWEsWUFBUUMsR0FBUixDQUFZLFdBQVo7QUFDQSxRQUFJdEIsUUFBUThCLFNBQVNHLEVBQXJCO0FBQ0FaLFlBQVFDLEdBQVIsQ0FBWSxLQUFLdEIsS0FBakI7O0FBRUE7QUFDQUUsVUFBTWdDLE1BQU4sQ0FBYS9CLEVBQUUsMENBQUYsRUFBOENRLEdBQTlDLENBQWtEWCxLQUFsRCxDQUFiO0FBQ0FFLFVBQU1nQyxNQUFOLENBQWEvQixFQUFFLDJDQUFGLEVBQStDUSxHQUEvQyxDQUFtRFIsRUFBRSxRQUFGLEVBQVlRLEdBQVosRUFBbkQsQ0FBYjs7QUFFQTtBQUNBVCxVQUFNaUMsR0FBTixDQUFVLENBQVYsRUFBYTlCLE1BQWI7QUFFRDtBQUdGOzs7OEJBRVcrQixHLEVBQUs7QUFDaEJqQyxLQUFFLGlCQUFGLEVBQXFCNkIsSUFBckIsQ0FBMEJJLEdBQTFCLEVBQStCQyxRQUEvQixDQUF3QyxPQUF4QztBQUNBbEMsS0FBRSxTQUFGLEVBQWFLLElBQWIsQ0FBa0IsVUFBbEIsRUFBOEIsS0FBOUI7O0FBRUEsVUFBTyxLQUFQO0FBQ0E7Ozs7OztrQkFuR21CVCxhIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTdHJpcGVQYXltZW50IHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy50b2tlbiA9IHt9O1xuXHRcdHRoaXMuc3RyaXBlQ3JlYXRlVG9rZW4oKTtcblxuXHR9XG5cblx0c3RyaXBlQ3JlYXRlVG9rZW4oKSB7XG5cdCAgbGV0ICRmb3JtID0gJCgnI3BheW1lbnQtZm9ybScpO1xuXHQgIGxldCB0aGlzU3RyaXBlUGF5bWVudCA9IHRoaXM7XG5cdCAgJGZvcm0uc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XG5cdCAgXHQvLyBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHQgICAgLy8gRGlzYWJsZSB0aGUgc3VibWl0IGJ1dHRvbiB0byBwcmV2ZW50IHJlcGVhdGVkIGNsaWNrczpcblx0ICAgICRmb3JtLmZpbmQoJy5zdWJtaXQnKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xuXG5cdCAgICAvLyBSZXF1ZXN0IGEgdG9rZW4gZnJvbSBTdHJpcGU6XG5cdCAgIC8vIGxldCB0b2tlbiA9ICBTdHJpcGUuY2FyZC5jcmVhdGVUb2tlbigkZm9ybSwgdGhpcy5zdHJpcGVSZXNwb25zZUhhbmRsZXIpO1xuXHQgICAvLyBjb25zb2xlLmxvZyh0b2tlbik7XG5cdCAgXHRsZXQgZXJyb3IgPSBmYWxzZTtcblx0ICBcdGxldCBjY051bSA9ICQoJy5jYXJkLW51bWJlcicpLnZhbCgpO1xuXHQgIFx0bGV0IGN2Y051bSA9ICQoJy5jYXJkLWN2YycpLnZhbCgpO1xuXHQgIFx0bGV0IGV4cE1vbnRoID0gJCgnLmNhcmQtZXhwaXJ5LW1vbnRoJykudmFsKCk7XG5cdCAgXHRsZXQgZXhwWWVhciA9ICQoJy5jYXJkLWV4cGlyeS15ZWFyJykudmFsKCk7XG5cblx0ICBcdGlmICghU3RyaXBlLmNhcmQudmFsaWRhdGVDYXJkTnVtYmVyKGNjTnVtKSkge1xuXHQgIFx0XHRlcnJvciA9IHRydWU7XG5cdCAgXHRcdHRoaXNTdHJpcGVQYXltZW50LnJlcG9ydEVycm9yKCdUaGUgY3JlZGl0IGNhcmQgbnVtYmVyIGlzIGludmFsaWQnKTtcblx0ICBcdH1cblxuXHQgIFx0aWYgKCFTdHJpcGUuY2FyZC52YWxpZGF0ZUNWQyhjdmNOdW0pKSB7XG5cdCAgXHRcdGVycm9yID0gdHJ1ZTtcblx0ICBcdFx0dGhpc1N0cmlwZVBheW1lbnQucmVwb3J0RXJyb3IoJ1RoZSBDVkMgbnVtYmVyIGlzIGludmFsaWQnKTtcblx0ICBcdH1cblx0ICBcdGlmICghU3RyaXBlLmNhcmQudmFsaWRhdGVFeHBpcnkoZXhwTW9udGgsIGV4cFllYXIpKSB7XG5cdCAgXHRcdGVycm9yID0gdHJ1ZTtcblx0ICBcdFx0dGhpc1N0cmlwZVBheW1lbnQucmVwb3J0RXJyb3IoJ1RoZSBleHBpcmF0aW9uIGRhdGUgaXMgaW52YWxpZCcpO1xuXHQgIFx0fVxuXG5cdCAgXHRpZiAoIWVycm9yKSB7XG5cdCAgXHRcdGNvbnNvbGUubG9nKCd3ZSBnb29kJyk7XG5cdCAgXHRcdGxldCB0b2tlbiA9IFN0cmlwZS5jYXJkLmNyZWF0ZVRva2VuKHtcblx0ICBcdFx0XHRudW1iZXI6IGNjTnVtLFxuXHQgIFx0XHRcdGN2YzogY3ZjTnVtLFxuXHQgIFx0XHRcdGV4cF9tb250aDogZXhwTW9udGgsXG5cdCAgXHRcdFx0ZXhwX3llYXI6IGV4cFllYXJcblx0ICBcdFx0fSwgdGhpcy5zdHJpcGVSZXNwb25zZUhhbmRsZXIpO1xuXHQgIFx0XHRcblx0ICBcdFx0Y29uc29sZS5sb2codG9rZW4pO1xuXHQgIFx0XHR0aGlzU3RyaXBlUGF5bWVudC50b2tlbiA9IHRva2VuO1xuXHQgIFx0XHRjb25zb2xlLmxvZyh0aGlzU3RyaXBlUGF5bWVudC50b2tlbik7XG5cdCAgXHRcdGNvbnNvbGUubG9nKCd0b2tlbiBjcmVhdGVkJyk7XG5cdCAgXHR9XG5cblxuXHQgICAgLy8gUHJldmVudCB0aGUgZm9ybSBmcm9tIGJlaW5nIHN1Ym1pdHRlZDpcblx0ICAgIFxuXHQgICAgY29uc29sZS5sb2coJ3N1Ym1pdHRpbmcuLi4nKTtcblx0ICAgIHJldHVybiBmYWxzZTtcblx0ICB9KTtcblxuXG5cblx0ICBcblx0fVxuXG5cdHN0cmlwZVJlc3BvbnNlSGFuZGxlcihzdGF0dXMsIHJlc3BvbnNlKSB7XG5cdCAgLy8gR3JhYiB0aGUgZm9ybTpcblx0ICB2YXIgJGZvcm0gPSAkKCcjcGF5bWVudC1mb3JtJyk7XG5cblx0ICBpZiAocmVzcG9uc2UuZXJyb3IpIHsgLy8gUHJvYmxlbSFcblx0ICBcdHRoaXMucmVwb3J0RXJyb3IocmVzcG9uc2UuZXJyb3IubWVzc2FnZSk7XG5cdCAgICAvLyBTaG93IHRoZSBlcnJvcnMgb24gdGhlIGZvcm06XG5cdCAgICAkZm9ybS5maW5kKCcucGF5bWVudC1lcnJvcnMnKS50ZXh0KHJlc3BvbnNlLmVycm9yLm1lc3NhZ2UpO1xuXHQgICAgJGZvcm0uZmluZCgnLnN1Ym1pdCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpOyAvLyBSZS1lbmFibGUgc3VibWlzc2lvblxuXG5cdCAgfSBlbHNlIHsgLy8gVG9rZW4gd2FzIGNyZWF0ZWQhXG5cblx0ICAgIC8vIEdldCB0aGUgdG9rZW4gSUQ6XG5cdCAgICBjb25zb2xlLmxvZygnbmV3IHRva2VuJyk7XG5cdCAgICBsZXQgdG9rZW4gPSByZXNwb25zZS5pZDtcblx0ICAgIGNvbnNvbGUubG9nKHRoaXMudG9rZW4pO1xuXG5cdCAgICAvLyBJbnNlcnQgdGhlIHRva2VuIElEIGludG8gdGhlIGZvcm0gc28gaXQgZ2V0cyBzdWJtaXR0ZWQgdG8gdGhlIHNlcnZlcjpcblx0ICAgICRmb3JtLmFwcGVuZCgkKCc8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJzdHJpcGVUb2tlblwiPicpLnZhbCh0b2tlbikpO1xuXHQgICAgJGZvcm0uYXBwZW5kKCQoJzxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImNoYXJnZUFtb3VudFwiPicpLnZhbCgkKCcudG90YWwnKS52YWwoKSkpO1xuXG5cdCAgICAvLyBTdWJtaXQgdGhlIGZvcm06XG5cdCAgICAkZm9ybS5nZXQoMCkuc3VibWl0KCk7XG5cblx0ICB9XG5cblxuXHR9XG5cblx0cmVwb3J0RXJyb3IobXNnKSB7XG5cdFx0JCgnLnBheW1lbnQtZXJyb3JzJykudGV4dChtc2cpLmFkZENsYXNzKCdlcnJvcicpO1xuXHRcdCQoJy5zdWJtaXQnKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcblxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cblxuXG5cblxuXG5cblxuXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL1N0cmlwZVBheW1lbnQuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ }

})