webpackHotUpdate(0,{

/***/ 6:
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StripePayment = function () {\n\tfunction StripePayment() {\n\t\t_classCallCheck(this, StripePayment);\n\n\t\tthis.token = {};\n\t\tthis.stripeCreateToken();\n\t}\n\n\t_createClass(StripePayment, [{\n\t\tkey: 'stripeCreateToken',\n\t\tvalue: function stripeCreateToken() {\n\t\t\tvar $form = $('#payment-form');\n\t\t\tvar thisStripePayment = this;\n\t\t\t$form.submit(function (event) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// Disable the submit button to prevent repeated clicks:\n\t\t\t\t$form.find('.submit').prop('disabled', true);\n\n\t\t\t\t// Request a token from Stripe:\n\t\t\t\tvar token = Stripe.card.createToken($form, thisStripePayment.stripeResponseHandler);\n\n\t\t\t\t// console.log(token);\n\t\t\t\t// let error = false;\n\t\t\t\t// let ccNum = $('.card-number').val();\n\t\t\t\t// let cvcNum = $('.card-cvc').val();\n\t\t\t\t// let expMonth = $('.card-expiry-month').val();\n\t\t\t\t// let expYear = $('.card-expiry-year').val();\n\t\t\t\t// let total = $('#form-total').val();\n\n\t\t\t\t// if (!Stripe.card.validateCardNumber(ccNum)) {\n\t\t\t\t// \terror = true;\n\t\t\t\t// \tthisStripePayment.reportError('The credit card number is invalid');\n\t\t\t\t// }\n\n\t\t\t\t// if (!Stripe.card.validateCVC(cvcNum)) {\n\t\t\t\t// \terror = true;\n\t\t\t\t// \tthisStripePayment.reportError('The CVC number is invalid');\n\t\t\t\t// }\n\t\t\t\t// if (!Stripe.card.validateExpiry(expMonth, expYear)) {\n\t\t\t\t// \terror = true;\n\t\t\t\t// \tthisStripePayment.reportError('The expiration date is invalid');\n\t\t\t\t// }\n\n\t\t\t\t// if (!error) {\n\t\t\t\t// \tlet token = Stripe.card.createToken({\n\t\t\t\t// \t\tnumber: ccNum,\n\t\t\t\t// \t\tcvc: cvcNum,\n\t\t\t\t// \t\texp_month: expMonth,\n\t\t\t\t// \t\texp_year: expYear,\n\t\t\t\t// \t\ttotal: total\n\t\t\t\t// \t}, thisStripePayment.stripeResponseHandler);\n\n\t\t\t\t// \t// console.log(token);\n\t\t\t\t// \t// thisStripePayment.token = token;\n\t\t\t\t// \t// console.log(thisStripePayment.token);\n\t\t\t\t// \tconsole.log('token created');\n\t\t\t\t// }\n\n\n\t\t\t\t// Prevent the form from being submitted:\n\n\t\t\t\tconsole.log('submitting...');\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'stripeResponseHandler',\n\t\tvalue: function stripeResponseHandler(status, response) {\n\t\t\t// Grab the form:\n\t\t\tvar $form = $('#payment-form');\n\t\t\tconsole.log('handling...');\n\n\t\t\tif (response.error) {\n\t\t\t\t// Problem!\n\t\t\t\tthis.reportError(response.error.message);\n\t\t\t\t// Show the errors on the form:\n\t\t\t\t$form.find('.payment-errors').text(response.error.message);\n\t\t\t\t$form.find('.submit').prop('disabled', false); // Re-enable submission\n\t\t\t} else {\n\t\t\t\t// Token was created!\n\n\t\t\t\t// Get the token ID:\n\t\t\t\tconsole.log('new token');\n\t\t\t\tconsole.log($('.total').val());\n\t\t\t\tvar token = response.id;\n\t\t\t\t// console.log(this.token);\n\n\t\t\t\t// Insert the token ID into the form so it gets submitted to the server:\n\t\t\t\t$form.append($('<input type=\"hidden\" name=\"stripeToken\">').val(token));\n\t\t\t\t// $form.append($('<input type=\"hidden\" name=\"chargeAmount\">').val($('.total').html()));\n\n\t\t\t\t// Submit the form:\n\t\t\t\t$form.get(0).submit();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reportError',\n\t\tvalue: function reportError(msg) {\n\t\t\t$('.payment-errors').text(msg).addClass('error');\n\t\t\t$('.submit').prop('disabled', false);\n\n\t\t\treturn false;\n\t\t}\n\t}]);\n\n\treturn StripePayment;\n}();\n\nexports.default = StripePayment;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU3RyaXBlUGF5bWVudC5qcz9kM2MzIl0sIm5hbWVzIjpbIlN0cmlwZVBheW1lbnQiLCJ0b2tlbiIsInN0cmlwZUNyZWF0ZVRva2VuIiwiJGZvcm0iLCIkIiwidGhpc1N0cmlwZVBheW1lbnQiLCJzdWJtaXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZmluZCIsInByb3AiLCJTdHJpcGUiLCJjYXJkIiwiY3JlYXRlVG9rZW4iLCJzdHJpcGVSZXNwb25zZUhhbmRsZXIiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwicmVzcG9uc2UiLCJlcnJvciIsInJlcG9ydEVycm9yIiwibWVzc2FnZSIsInRleHQiLCJ2YWwiLCJpZCIsImFwcGVuZCIsImdldCIsIm1zZyIsImFkZENsYXNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQXFCQSxhO0FBQ3BCLDBCQUFjO0FBQUE7O0FBQ2IsT0FBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQSxPQUFLQyxpQkFBTDtBQUVBOzs7O3NDQUVtQjtBQUNsQixPQUFJQyxRQUFRQyxFQUFFLGVBQUYsQ0FBWjtBQUNBLE9BQUlDLG9CQUFvQixJQUF4QjtBQUNBRixTQUFNRyxNQUFOLENBQWEsVUFBU0MsS0FBVCxFQUFnQjtBQUM1QkEsVUFBTUMsY0FBTjtBQUNDO0FBQ0FMLFVBQU1NLElBQU4sQ0FBVyxTQUFYLEVBQXNCQyxJQUF0QixDQUEyQixVQUEzQixFQUF1QyxJQUF2Qzs7QUFFQTtBQUNELFFBQUlULFFBQVNVLE9BQU9DLElBQVAsQ0FBWUMsV0FBWixDQUF3QlYsS0FBeEIsRUFBK0JFLGtCQUFrQlMscUJBQWpELENBQWI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdDOztBQUVBQyxZQUFRQyxHQUFSLENBQVksZUFBWjtBQUNBLFdBQU8sS0FBUDtBQUNELElBbEREO0FBdUREOzs7d0NBRXFCQyxNLEVBQVFDLFEsRUFBVTtBQUN0QztBQUNBLE9BQUlmLFFBQVFDLEVBQUUsZUFBRixDQUFaO0FBQ0FXLFdBQVFDLEdBQVIsQ0FBWSxhQUFaOztBQUVBLE9BQUlFLFNBQVNDLEtBQWIsRUFBb0I7QUFBRTtBQUNyQixTQUFLQyxXQUFMLENBQWlCRixTQUFTQyxLQUFULENBQWVFLE9BQWhDO0FBQ0M7QUFDQWxCLFVBQU1NLElBQU4sQ0FBVyxpQkFBWCxFQUE4QmEsSUFBOUIsQ0FBbUNKLFNBQVNDLEtBQVQsQ0FBZUUsT0FBbEQ7QUFDQWxCLFVBQU1NLElBQU4sQ0FBVyxTQUFYLEVBQXNCQyxJQUF0QixDQUEyQixVQUEzQixFQUF1QyxLQUF2QyxFQUprQixDQUk2QjtBQUVoRCxJQU5ELE1BTU87QUFBRTs7QUFFUDtBQUNBSyxZQUFRQyxHQUFSLENBQVksV0FBWjtBQUNBRCxZQUFRQyxHQUFSLENBQVlaLEVBQUUsUUFBRixFQUFZbUIsR0FBWixFQUFaO0FBQ0EsUUFBSXRCLFFBQVFpQixTQUFTTSxFQUFyQjtBQUNBOztBQUVBO0FBQ0FyQixVQUFNc0IsTUFBTixDQUFhckIsRUFBRSwwQ0FBRixFQUE4Q21CLEdBQTlDLENBQWtEdEIsS0FBbEQsQ0FBYjtBQUNBOztBQUVBO0FBQ0FFLFVBQU11QixHQUFOLENBQVUsQ0FBVixFQUFhcEIsTUFBYjtBQUVEO0FBR0Y7Ozs4QkFFV3FCLEcsRUFBSztBQUNoQnZCLEtBQUUsaUJBQUYsRUFBcUJrQixJQUFyQixDQUEwQkssR0FBMUIsRUFBK0JDLFFBQS9CLENBQXdDLE9BQXhDO0FBQ0F4QixLQUFFLFNBQUYsRUFBYU0sSUFBYixDQUFrQixVQUFsQixFQUE4QixLQUE5Qjs7QUFFQSxVQUFPLEtBQVA7QUFDQTs7Ozs7O2tCQXZHbUJWLGEiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0cmlwZVBheW1lbnQge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLnRva2VuID0ge307XG5cdFx0dGhpcy5zdHJpcGVDcmVhdGVUb2tlbigpO1xuXG5cdH1cblxuXHRzdHJpcGVDcmVhdGVUb2tlbigpIHtcblx0ICBsZXQgJGZvcm0gPSAkKCcjcGF5bWVudC1mb3JtJyk7XG5cdCAgbGV0IHRoaXNTdHJpcGVQYXltZW50ID0gdGhpcztcblx0ICAkZm9ybS5zdWJtaXQoZnVuY3Rpb24oZXZlbnQpIHtcblx0ICBcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdCAgICAvLyBEaXNhYmxlIHRoZSBzdWJtaXQgYnV0dG9uIHRvIHByZXZlbnQgcmVwZWF0ZWQgY2xpY2tzOlxuXHQgICAgJGZvcm0uZmluZCgnLnN1Ym1pdCcpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XG5cblx0ICAgIC8vIFJlcXVlc3QgYSB0b2tlbiBmcm9tIFN0cmlwZTpcblx0ICAgbGV0IHRva2VuID0gIFN0cmlwZS5jYXJkLmNyZWF0ZVRva2VuKCRmb3JtLCB0aGlzU3RyaXBlUGF5bWVudC5zdHJpcGVSZXNwb25zZUhhbmRsZXIpO1xuXG5cdCAgIC8vIGNvbnNvbGUubG9nKHRva2VuKTtcblx0ICBcdC8vIGxldCBlcnJvciA9IGZhbHNlO1xuXHQgIFx0Ly8gbGV0IGNjTnVtID0gJCgnLmNhcmQtbnVtYmVyJykudmFsKCk7XG5cdCAgXHQvLyBsZXQgY3ZjTnVtID0gJCgnLmNhcmQtY3ZjJykudmFsKCk7XG5cdCAgXHQvLyBsZXQgZXhwTW9udGggPSAkKCcuY2FyZC1leHBpcnktbW9udGgnKS52YWwoKTtcblx0ICBcdC8vIGxldCBleHBZZWFyID0gJCgnLmNhcmQtZXhwaXJ5LXllYXInKS52YWwoKTtcblx0ICBcdC8vIGxldCB0b3RhbCA9ICQoJyNmb3JtLXRvdGFsJykudmFsKCk7XG5cblx0ICBcdC8vIGlmICghU3RyaXBlLmNhcmQudmFsaWRhdGVDYXJkTnVtYmVyKGNjTnVtKSkge1xuXHQgIFx0Ly8gXHRlcnJvciA9IHRydWU7XG5cdCAgXHQvLyBcdHRoaXNTdHJpcGVQYXltZW50LnJlcG9ydEVycm9yKCdUaGUgY3JlZGl0IGNhcmQgbnVtYmVyIGlzIGludmFsaWQnKTtcblx0ICBcdC8vIH1cblxuXHQgIFx0Ly8gaWYgKCFTdHJpcGUuY2FyZC52YWxpZGF0ZUNWQyhjdmNOdW0pKSB7XG5cdCAgXHQvLyBcdGVycm9yID0gdHJ1ZTtcblx0ICBcdC8vIFx0dGhpc1N0cmlwZVBheW1lbnQucmVwb3J0RXJyb3IoJ1RoZSBDVkMgbnVtYmVyIGlzIGludmFsaWQnKTtcblx0ICBcdC8vIH1cblx0ICBcdC8vIGlmICghU3RyaXBlLmNhcmQudmFsaWRhdGVFeHBpcnkoZXhwTW9udGgsIGV4cFllYXIpKSB7XG5cdCAgXHQvLyBcdGVycm9yID0gdHJ1ZTtcblx0ICBcdC8vIFx0dGhpc1N0cmlwZVBheW1lbnQucmVwb3J0RXJyb3IoJ1RoZSBleHBpcmF0aW9uIGRhdGUgaXMgaW52YWxpZCcpO1xuXHQgIFx0Ly8gfVxuXG5cdCAgXHQvLyBpZiAoIWVycm9yKSB7XG5cdCAgXHQvLyBcdGxldCB0b2tlbiA9IFN0cmlwZS5jYXJkLmNyZWF0ZVRva2VuKHtcblx0ICBcdC8vIFx0XHRudW1iZXI6IGNjTnVtLFxuXHQgIFx0Ly8gXHRcdGN2YzogY3ZjTnVtLFxuXHQgIFx0Ly8gXHRcdGV4cF9tb250aDogZXhwTW9udGgsXG5cdCAgXHQvLyBcdFx0ZXhwX3llYXI6IGV4cFllYXIsXG5cdCAgXHQvLyBcdFx0dG90YWw6IHRvdGFsXG5cdCAgXHQvLyBcdH0sIHRoaXNTdHJpcGVQYXltZW50LnN0cmlwZVJlc3BvbnNlSGFuZGxlcik7XG5cdCAgXHRcdFxuXHQgIFx0Ly8gXHQvLyBjb25zb2xlLmxvZyh0b2tlbik7XG5cdCAgXHQvLyBcdC8vIHRoaXNTdHJpcGVQYXltZW50LnRva2VuID0gdG9rZW47XG5cdCAgXHQvLyBcdC8vIGNvbnNvbGUubG9nKHRoaXNTdHJpcGVQYXltZW50LnRva2VuKTtcblx0ICBcdC8vIFx0Y29uc29sZS5sb2coJ3Rva2VuIGNyZWF0ZWQnKTtcblx0ICBcdC8vIH1cblxuXG5cdCAgICAvLyBQcmV2ZW50IHRoZSBmb3JtIGZyb20gYmVpbmcgc3VibWl0dGVkOlxuXHQgICAgXG5cdCAgICBjb25zb2xlLmxvZygnc3VibWl0dGluZy4uLicpO1xuXHQgICAgcmV0dXJuIGZhbHNlO1xuXHQgIH0pO1xuXG5cblxuXHQgIFxuXHR9XG5cblx0c3RyaXBlUmVzcG9uc2VIYW5kbGVyKHN0YXR1cywgcmVzcG9uc2UpIHtcblx0ICAvLyBHcmFiIHRoZSBmb3JtOlxuXHQgIHZhciAkZm9ybSA9ICQoJyNwYXltZW50LWZvcm0nKTtcblx0ICBjb25zb2xlLmxvZygnaGFuZGxpbmcuLi4nKVxuXG5cdCAgaWYgKHJlc3BvbnNlLmVycm9yKSB7IC8vIFByb2JsZW0hXG5cdCAgXHR0aGlzLnJlcG9ydEVycm9yKHJlc3BvbnNlLmVycm9yLm1lc3NhZ2UpO1xuXHQgICAgLy8gU2hvdyB0aGUgZXJyb3JzIG9uIHRoZSBmb3JtOlxuXHQgICAgJGZvcm0uZmluZCgnLnBheW1lbnQtZXJyb3JzJykudGV4dChyZXNwb25zZS5lcnJvci5tZXNzYWdlKTtcblx0ICAgICRmb3JtLmZpbmQoJy5zdWJtaXQnKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTsgLy8gUmUtZW5hYmxlIHN1Ym1pc3Npb25cblxuXHQgIH0gZWxzZSB7IC8vIFRva2VuIHdhcyBjcmVhdGVkIVxuXG5cdCAgICAvLyBHZXQgdGhlIHRva2VuIElEOlxuXHQgICAgY29uc29sZS5sb2coJ25ldyB0b2tlbicpO1xuXHQgICAgY29uc29sZS5sb2coJCgnLnRvdGFsJykudmFsKCkpO1xuXHQgICAgbGV0IHRva2VuID0gcmVzcG9uc2UuaWQ7XG5cdCAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnRva2VuKTtcblxuXHQgICAgLy8gSW5zZXJ0IHRoZSB0b2tlbiBJRCBpbnRvIHRoZSBmb3JtIHNvIGl0IGdldHMgc3VibWl0dGVkIHRvIHRoZSBzZXJ2ZXI6XG5cdCAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwic3RyaXBlVG9rZW5cIj4nKS52YWwodG9rZW4pKTtcblx0ICAgIC8vICRmb3JtLmFwcGVuZCgkKCc8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJjaGFyZ2VBbW91bnRcIj4nKS52YWwoJCgnLnRvdGFsJykuaHRtbCgpKSk7XG5cblx0ICAgIC8vIFN1Ym1pdCB0aGUgZm9ybTpcblx0ICAgICRmb3JtLmdldCgwKS5zdWJtaXQoKTtcblxuXHQgIH1cblxuXG5cdH1cblxuXHRyZXBvcnRFcnJvcihtc2cpIHtcblx0XHQkKCcucGF5bWVudC1lcnJvcnMnKS50ZXh0KG1zZykuYWRkQ2xhc3MoJ2Vycm9yJyk7XG5cdFx0JCgnLnN1Ym1pdCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblxuXG5cblxuXG5cblxuXG5cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvU3RyaXBlUGF5bWVudC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }

})