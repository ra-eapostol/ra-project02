webpackHotUpdate(0,{

/***/ 6:
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StripePayment = function () {\n\tfunction StripePayment() {\n\t\t_classCallCheck(this, StripePayment);\n\n\t\tthis.token = {};\n\t\tthis.stripeCreateToken();\n\t}\n\n\t_createClass(StripePayment, [{\n\t\tkey: 'stripeCreateToken',\n\t\tvalue: function stripeCreateToken() {\n\t\t\tvar $form = $('#payment-form');\n\t\t\tvar thisStripePayment = this;\n\t\t\t$form.submit(function (event) {\n\t\t\t\t// event.preventDefault();\n\t\t\t\t// Disable the submit button to prevent repeated clicks:\n\t\t\t\t$form.find('.submit').prop('disabled', true);\n\n\t\t\t\t// Request a token from Stripe:\n\t\t\t\tvar token = Stripe.card.createToken($form, this.stripeResponseHandler);\n\t\t\t\t// console.log(token);\n\t\t\t\t// let error = false;\n\t\t\t\t// let ccNum = $('.card-number').val();\n\t\t\t\t// let cvcNum = $('.card-cvc').val();\n\t\t\t\t// let expMonth = $('.card-expiry-month').val();\n\t\t\t\t// let expYear = $('.card-expiry-year').val();\n\n\t\t\t\t// if (!Stripe.card.validateCardNumber(ccNum)) {\n\t\t\t\t// \terror = true;\n\t\t\t\t// \tthisStripePayment.reportError('The credit card number is invalid');\n\t\t\t\t// }\n\n\t\t\t\t// if (!Stripe.card.validateCVC(cvcNum)) {\n\t\t\t\t// \terror = true;\n\t\t\t\t// \tthisStripePayment.reportError('The CVC number is invalid');\n\t\t\t\t// }\n\t\t\t\t// if (!Stripe.card.validateExpiry(expMonth, expYear)) {\n\t\t\t\t// \terror = true;\n\t\t\t\t// \tthisStripePayment.reportError('The expiration date is invalid');\n\t\t\t\t// }\n\n\t\t\t\t// if (!error) {\n\t\t\t\t// \tlet token = Stripe.card.createToken({\n\t\t\t\t// \t\tnumber: ccNum,\n\t\t\t\t// \t\tcvc: cvcNum,\n\t\t\t\t// \t\texp_month: expMonth,\n\t\t\t\t// \t\texp_year: expYear\n\t\t\t\t// \t}, this.stripeResponseHandler);\n\n\t\t\t\t// \tconsole.log(token);\n\t\t\t\t// \tthisStripePayment.token = token;\n\t\t\t\t// \tconsole.log(thisStripePayment.token);\n\t\t\t\t// \tconsole.log('token created');\n\t\t\t\t// }\n\n\n\t\t\t\t// Prevent the form from being submitted:\n\n\t\t\t\tconsole.log('submitting...');\n\t\t\t\t// return false;\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'stripeResponseHandler',\n\t\tvalue: function stripeResponseHandler(status, response) {\n\t\t\t// Grab the form:\n\t\t\tvar $form = $('#payment-form');\n\t\t\tconsole.log('handling...');\n\n\t\t\tif (response.error) {\n\t\t\t\t// Problem!\n\t\t\t\tthis.reportError(response.error.message);\n\t\t\t\t// Show the errors on the form:\n\t\t\t\t$form.find('.payment-errors').text(response.error.message);\n\t\t\t\t$form.find('.submit').prop('disabled', false); // Re-enable submission\n\t\t\t} else {\n\t\t\t\t// Token was created!\n\n\t\t\t\t// Get the token ID:\n\t\t\t\tconsole.log('new token');\n\t\t\t\tvar token = response.id;\n\t\t\t\t// console.log(this.token);\n\n\t\t\t\t// Insert the token ID into the form so it gets submitted to the server:\n\t\t\t\t$form.append($('<input type=\"hidden\" name=\"stripeToken\">').val(token));\n\t\t\t\t$form.append($('<input type=\"hidden\" name=\"chargeAmount\">').val($('.total').val()));\n\n\t\t\t\t// Submit the form:\n\t\t\t\t$form.get(0).submit();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reportError',\n\t\tvalue: function reportError(msg) {\n\t\t\t$('.payment-errors').text(msg).addClass('error');\n\t\t\t$('.submit').prop('disabled', false);\n\n\t\t\treturn false;\n\t\t}\n\t}]);\n\n\treturn StripePayment;\n}();\n\nexports.default = StripePayment;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU3RyaXBlUGF5bWVudC5qcz9kM2MzIl0sIm5hbWVzIjpbIlN0cmlwZVBheW1lbnQiLCJ0b2tlbiIsInN0cmlwZUNyZWF0ZVRva2VuIiwiJGZvcm0iLCIkIiwidGhpc1N0cmlwZVBheW1lbnQiLCJzdWJtaXQiLCJldmVudCIsImZpbmQiLCJwcm9wIiwiU3RyaXBlIiwiY2FyZCIsImNyZWF0ZVRva2VuIiwic3RyaXBlUmVzcG9uc2VIYW5kbGVyIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsInJlc3BvbnNlIiwiZXJyb3IiLCJyZXBvcnRFcnJvciIsIm1lc3NhZ2UiLCJ0ZXh0IiwiaWQiLCJhcHBlbmQiLCJ2YWwiLCJnZXQiLCJtc2ciLCJhZGRDbGFzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQUFxQkEsYTtBQUNwQiwwQkFBYztBQUFBOztBQUNiLE9BQUtDLEtBQUwsR0FBYSxFQUFiO0FBQ0EsT0FBS0MsaUJBQUw7QUFFQTs7OztzQ0FFbUI7QUFDbEIsT0FBSUMsUUFBUUMsRUFBRSxlQUFGLENBQVo7QUFDQSxPQUFJQyxvQkFBb0IsSUFBeEI7QUFDQUYsU0FBTUcsTUFBTixDQUFhLFVBQVNDLEtBQVQsRUFBZ0I7QUFDNUI7QUFDQztBQUNBSixVQUFNSyxJQUFOLENBQVcsU0FBWCxFQUFzQkMsSUFBdEIsQ0FBMkIsVUFBM0IsRUFBdUMsSUFBdkM7O0FBRUE7QUFDRCxRQUFJUixRQUFTUyxPQUFPQyxJQUFQLENBQVlDLFdBQVosQ0FBd0JULEtBQXhCLEVBQStCLEtBQUtVLHFCQUFwQyxDQUFiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0M7O0FBRUFDLFlBQVFDLEdBQVIsQ0FBWSxlQUFaO0FBQ0E7QUFDRCxJQS9DRDtBQW9ERDs7O3dDQUVxQkMsTSxFQUFRQyxRLEVBQVU7QUFDdEM7QUFDQSxPQUFJZCxRQUFRQyxFQUFFLGVBQUYsQ0FBWjtBQUNBVSxXQUFRQyxHQUFSLENBQVksYUFBWjs7QUFFQSxPQUFJRSxTQUFTQyxLQUFiLEVBQW9CO0FBQUU7QUFDckIsU0FBS0MsV0FBTCxDQUFpQkYsU0FBU0MsS0FBVCxDQUFlRSxPQUFoQztBQUNDO0FBQ0FqQixVQUFNSyxJQUFOLENBQVcsaUJBQVgsRUFBOEJhLElBQTlCLENBQW1DSixTQUFTQyxLQUFULENBQWVFLE9BQWxEO0FBQ0FqQixVQUFNSyxJQUFOLENBQVcsU0FBWCxFQUFzQkMsSUFBdEIsQ0FBMkIsVUFBM0IsRUFBdUMsS0FBdkMsRUFKa0IsQ0FJNkI7QUFFaEQsSUFORCxNQU1PO0FBQUU7O0FBRVA7QUFDQUssWUFBUUMsR0FBUixDQUFZLFdBQVo7QUFDQSxRQUFJZCxRQUFRZ0IsU0FBU0ssRUFBckI7QUFDQTs7QUFFQTtBQUNBbkIsVUFBTW9CLE1BQU4sQ0FBYW5CLEVBQUUsMENBQUYsRUFBOENvQixHQUE5QyxDQUFrRHZCLEtBQWxELENBQWI7QUFDQUUsVUFBTW9CLE1BQU4sQ0FBYW5CLEVBQUUsMkNBQUYsRUFBK0NvQixHQUEvQyxDQUFtRHBCLEVBQUUsUUFBRixFQUFZb0IsR0FBWixFQUFuRCxDQUFiOztBQUVBO0FBQ0FyQixVQUFNc0IsR0FBTixDQUFVLENBQVYsRUFBYW5CLE1BQWI7QUFFRDtBQUdGOzs7OEJBRVdvQixHLEVBQUs7QUFDaEJ0QixLQUFFLGlCQUFGLEVBQXFCaUIsSUFBckIsQ0FBMEJLLEdBQTFCLEVBQStCQyxRQUEvQixDQUF3QyxPQUF4QztBQUNBdkIsS0FBRSxTQUFGLEVBQWFLLElBQWIsQ0FBa0IsVUFBbEIsRUFBOEIsS0FBOUI7O0FBRUEsVUFBTyxLQUFQO0FBQ0E7Ozs7OztrQkFuR21CVCxhIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTdHJpcGVQYXltZW50IHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy50b2tlbiA9IHt9O1xuXHRcdHRoaXMuc3RyaXBlQ3JlYXRlVG9rZW4oKTtcblxuXHR9XG5cblx0c3RyaXBlQ3JlYXRlVG9rZW4oKSB7XG5cdCAgbGV0ICRmb3JtID0gJCgnI3BheW1lbnQtZm9ybScpO1xuXHQgIGxldCB0aGlzU3RyaXBlUGF5bWVudCA9IHRoaXM7XG5cdCAgJGZvcm0uc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XG5cdCAgXHQvLyBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHQgICAgLy8gRGlzYWJsZSB0aGUgc3VibWl0IGJ1dHRvbiB0byBwcmV2ZW50IHJlcGVhdGVkIGNsaWNrczpcblx0ICAgICRmb3JtLmZpbmQoJy5zdWJtaXQnKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xuXG5cdCAgICAvLyBSZXF1ZXN0IGEgdG9rZW4gZnJvbSBTdHJpcGU6XG5cdCAgIGxldCB0b2tlbiA9ICBTdHJpcGUuY2FyZC5jcmVhdGVUb2tlbigkZm9ybSwgdGhpcy5zdHJpcGVSZXNwb25zZUhhbmRsZXIpO1xuXHQgICAvLyBjb25zb2xlLmxvZyh0b2tlbik7XG5cdCAgXHQvLyBsZXQgZXJyb3IgPSBmYWxzZTtcblx0ICBcdC8vIGxldCBjY051bSA9ICQoJy5jYXJkLW51bWJlcicpLnZhbCgpO1xuXHQgIFx0Ly8gbGV0IGN2Y051bSA9ICQoJy5jYXJkLWN2YycpLnZhbCgpO1xuXHQgIFx0Ly8gbGV0IGV4cE1vbnRoID0gJCgnLmNhcmQtZXhwaXJ5LW1vbnRoJykudmFsKCk7XG5cdCAgXHQvLyBsZXQgZXhwWWVhciA9ICQoJy5jYXJkLWV4cGlyeS15ZWFyJykudmFsKCk7XG5cblx0ICBcdC8vIGlmICghU3RyaXBlLmNhcmQudmFsaWRhdGVDYXJkTnVtYmVyKGNjTnVtKSkge1xuXHQgIFx0Ly8gXHRlcnJvciA9IHRydWU7XG5cdCAgXHQvLyBcdHRoaXNTdHJpcGVQYXltZW50LnJlcG9ydEVycm9yKCdUaGUgY3JlZGl0IGNhcmQgbnVtYmVyIGlzIGludmFsaWQnKTtcblx0ICBcdC8vIH1cblxuXHQgIFx0Ly8gaWYgKCFTdHJpcGUuY2FyZC52YWxpZGF0ZUNWQyhjdmNOdW0pKSB7XG5cdCAgXHQvLyBcdGVycm9yID0gdHJ1ZTtcblx0ICBcdC8vIFx0dGhpc1N0cmlwZVBheW1lbnQucmVwb3J0RXJyb3IoJ1RoZSBDVkMgbnVtYmVyIGlzIGludmFsaWQnKTtcblx0ICBcdC8vIH1cblx0ICBcdC8vIGlmICghU3RyaXBlLmNhcmQudmFsaWRhdGVFeHBpcnkoZXhwTW9udGgsIGV4cFllYXIpKSB7XG5cdCAgXHQvLyBcdGVycm9yID0gdHJ1ZTtcblx0ICBcdC8vIFx0dGhpc1N0cmlwZVBheW1lbnQucmVwb3J0RXJyb3IoJ1RoZSBleHBpcmF0aW9uIGRhdGUgaXMgaW52YWxpZCcpO1xuXHQgIFx0Ly8gfVxuXG5cdCAgXHQvLyBpZiAoIWVycm9yKSB7XG5cdCAgXHQvLyBcdGxldCB0b2tlbiA9IFN0cmlwZS5jYXJkLmNyZWF0ZVRva2VuKHtcblx0ICBcdC8vIFx0XHRudW1iZXI6IGNjTnVtLFxuXHQgIFx0Ly8gXHRcdGN2YzogY3ZjTnVtLFxuXHQgIFx0Ly8gXHRcdGV4cF9tb250aDogZXhwTW9udGgsXG5cdCAgXHQvLyBcdFx0ZXhwX3llYXI6IGV4cFllYXJcblx0ICBcdC8vIFx0fSwgdGhpcy5zdHJpcGVSZXNwb25zZUhhbmRsZXIpO1xuXHQgIFx0XHRcblx0ICBcdC8vIFx0Y29uc29sZS5sb2codG9rZW4pO1xuXHQgIFx0Ly8gXHR0aGlzU3RyaXBlUGF5bWVudC50b2tlbiA9IHRva2VuO1xuXHQgIFx0Ly8gXHRjb25zb2xlLmxvZyh0aGlzU3RyaXBlUGF5bWVudC50b2tlbik7XG5cdCAgXHQvLyBcdGNvbnNvbGUubG9nKCd0b2tlbiBjcmVhdGVkJyk7XG5cdCAgXHQvLyB9XG5cblxuXHQgICAgLy8gUHJldmVudCB0aGUgZm9ybSBmcm9tIGJlaW5nIHN1Ym1pdHRlZDpcblx0ICAgIFxuXHQgICAgY29uc29sZS5sb2coJ3N1Ym1pdHRpbmcuLi4nKTtcblx0ICAgIC8vIHJldHVybiBmYWxzZTtcblx0ICB9KTtcblxuXG5cblx0ICBcblx0fVxuXG5cdHN0cmlwZVJlc3BvbnNlSGFuZGxlcihzdGF0dXMsIHJlc3BvbnNlKSB7XG5cdCAgLy8gR3JhYiB0aGUgZm9ybTpcblx0ICB2YXIgJGZvcm0gPSAkKCcjcGF5bWVudC1mb3JtJyk7XG5cdCAgY29uc29sZS5sb2coJ2hhbmRsaW5nLi4uJylcblxuXHQgIGlmIChyZXNwb25zZS5lcnJvcikgeyAvLyBQcm9ibGVtIVxuXHQgIFx0dGhpcy5yZXBvcnRFcnJvcihyZXNwb25zZS5lcnJvci5tZXNzYWdlKTtcblx0ICAgIC8vIFNob3cgdGhlIGVycm9ycyBvbiB0aGUgZm9ybTpcblx0ICAgICRmb3JtLmZpbmQoJy5wYXltZW50LWVycm9ycycpLnRleHQocmVzcG9uc2UuZXJyb3IubWVzc2FnZSk7XG5cdCAgICAkZm9ybS5maW5kKCcuc3VibWl0JykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7IC8vIFJlLWVuYWJsZSBzdWJtaXNzaW9uXG5cblx0ICB9IGVsc2UgeyAvLyBUb2tlbiB3YXMgY3JlYXRlZCFcblxuXHQgICAgLy8gR2V0IHRoZSB0b2tlbiBJRDpcblx0ICAgIGNvbnNvbGUubG9nKCduZXcgdG9rZW4nKTtcblx0ICAgIGxldCB0b2tlbiA9IHJlc3BvbnNlLmlkO1xuXHQgICAgLy8gY29uc29sZS5sb2codGhpcy50b2tlbik7XG5cblx0ICAgIC8vIEluc2VydCB0aGUgdG9rZW4gSUQgaW50byB0aGUgZm9ybSBzbyBpdCBnZXRzIHN1Ym1pdHRlZCB0byB0aGUgc2VydmVyOlxuXHQgICAgJGZvcm0uYXBwZW5kKCQoJzxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInN0cmlwZVRva2VuXCI+JykudmFsKHRva2VuKSk7XG5cdCAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiY2hhcmdlQW1vdW50XCI+JykudmFsKCQoJy50b3RhbCcpLnZhbCgpKSk7XG5cblx0ICAgIC8vIFN1Ym1pdCB0aGUgZm9ybTpcblx0ICAgICRmb3JtLmdldCgwKS5zdWJtaXQoKTtcblxuXHQgIH1cblxuXG5cdH1cblxuXHRyZXBvcnRFcnJvcihtc2cpIHtcblx0XHQkKCcucGF5bWVudC1lcnJvcnMnKS50ZXh0KG1zZykuYWRkQ2xhc3MoJ2Vycm9yJyk7XG5cdFx0JCgnLnN1Ym1pdCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblxuXG5cblxuXG5cblxuXG5cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvU3RyaXBlUGF5bWVudC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }

})